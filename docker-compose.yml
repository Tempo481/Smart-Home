version: "3.6"

services:

#Sensoren
    sensor_helligkeit:
        container_name: "sensor_helligkeit"
        build:
            context: ./sensor
            dockerfile: dockerfile
        image: verteilte_systeme/sensor

        environment:
            SENSOR_NAME: "Dachterrasse"
            SENSOR_TYPE: "Helligkeit"
            ZENTRALE_IP: "172.20.0.2"
            ZENTRALE_PORT: "50000"

        networks:
            verteilte_systeme:
                ipv4_address: "172.20.0.11"

    sensor_temperatur:
        container_name: "sensor_temperatur"
        build:
            context: ./sensor
            dockerfile: dockerfile
        image: verteilte_systeme/sensor

        environment:
            SENSOR_NAME: "Heizung Wohnzimmer"
            SENSOR_TYPE: "Temperatur"
            ZENTRALE_IP: "172.20.0.2"
            ZENTRALE_PORT: "50000"

        networks:
            verteilte_systeme:
                ipv4_address: "172.20.0.12"
    
    sensor_niederschlag:
        container_name: "sensor_niederschlag"
        build:
            context: ./sensor
            dockerfile: dockerfile
        image: verteilte_systeme/sensor

        environment:
            SENSOR_NAME: "Dachterrasse"
            SENSOR_TYPE: "Niederschlag"
            ZENTRALE_IP: "172.20.0.2"
            ZENTRALE_PORT: "50000"

        networks:
            verteilte_systeme:
                ipv4_address: "172.20.0.13"

    sensor_wind:
        container_name: "sensor_wind"
        build:
            context: ./sensor
            dockerfile: dockerfile
        image: verteilte_systeme/sensor

        environment:
            SENSOR_NAME: "Dach"
            SENSOR_TYPE: "Wind"
            ZENTRALE_IP: "172.20.0.2"
            ZENTRALE_PORT: "50000"

        networks:
            verteilte_systeme:
                ipv4_address: "172.20.0.14"

# Zentrale
    zentrale:
        container_name: "zentrale"
        build:
            context: ./zentrale
            dockerfile: dockerfile
        image: verteilte_systeme/zentrale:latest

        ports:
            - "50000:50000"
            - "80:80"
            - "9090:9090"
        
        networks:
            verteilte_systeme:
                ipv4_address: "172.20.0.2"
                


# Anbieter
    anbieter:
        container_name: "anbieter"
        build:
            context: ./anbieter
            dockerfile: dockerfile
        image: verteilte_systeme/anbieter:latest
        
        environment:
            DB_USERNAME: "root"
            DB_PASSWORD: "halloWelt123"
            DB_HOST: "172.20.0.20"
            DB_PORT: "27017"

        networks:
            verteilte_systeme:
                ipv4_address: "172.20.0.3"

# Datenbank (MongoDB)
    datenbank:
        container_name: "mongodb"
        image: mongo
        restart: always
        
        ports:
            - "27017:27017"
        
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: halloWelt123
            
        networks:
            verteilte_systeme:
                ipv4_address: "172.20.0.20"

# Management Tool
    portainer:
        container_name: "portainer"
        image: portainer/portainer
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_data:/data

        ports:
            - "81:9000"
        
        networks:
            verteilte_systeme:
                ipv4_address: "172.20.0.10"
        
# Datenbank Management Tool
    mongoku:
        container_name: "mongoku"
        image: huggingface/mongoku
        
        ports:
            - "82:3100"
        
        environment:
            MONGOKU_DEFAULT_HOST: mongodb://root:halloWelt123@172.20.0.20:27017
        
        networks:
            verteilte_systeme:
                ipv4_address: "172.20.0.9"
        

#Volumes
volumes:
    portainer_data:

#Netzwerk
networks:
    verteilte_systeme:
        ipam:
            driver: default
            config:
                - subnet: "172.20.0.0/16"